user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {

    # Global Proxy Cache Configuration
    proxy_cache_path /etc/nginx/cache/newchat levels=1:2 keys_zone=newchat_cache:20m inactive=1d max_size=5g;

    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##
    access_log /var/log/nginx/access.log;

    ##
    # Gzip Settings
    ##
    gzip on;
    
    client_max_body_size 50M;  # 设置最大上传文件大小为 50MB

    ##
    # Virtual Host Configs
    ##
    # HTTPS server configuration
    server {
        listen              443 ssl http2;
        listen              [::]:443 ssl http2;
        server_name         143322388.top;

        # SSL Files
    ssl_certificate /etc/letsencrypt/live/143322388.top/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/143322388.top/privkey.pem; # managed by Certbot

        # Logs
        access_log /data/logs/ngx.chatgpt.access.log;
        error_log /data/logs/ngx.chatgpt.error.log;

        # Block invalid files
        location ~* \.js\.map$ {
            return 404;
        }

        client_header_buffer_size 4k;
        large_client_header_buffers 8 16k;

        # Main location for application proxying
        location / {
            proxy_redirect off;
            proxy_buffering off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

            proxy_pass http://127.0.0.1:50002;
        }

        # Static file caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|otf|eot|svg|mp4|webm|ogg|ogv|zip|pdf)$ {
            proxy_cache newchat_cache;
            proxy_cache_valid 200 60m;   # 对状态码200的响应缓存60分钟

            # 设置静态文件的缓存控制，浏览器缓存控制
            expires 7d;

            # 添加响应头部
            add_header X-Cache-Status $upstream_cache_status;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:50002;
        }
    

}

    # HTTP server configuration to redirect HTTP to HTTPS
    server {
    if ($host = 143322388.top) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen      80;
        listen      [::]:80;
        server_name 143322388.top;
        return      301 https://143322388.top$request_uri;
    

}

}